package by.bsuir.hotelReservation.web.controller;

import java.io.IOException;
import javax.servlet.ServletConfig;
import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import by.bsuir.hotelReservation.connection.pool.ConnectionPool;
import by.bsuir.hotelReservation.connection.pool.ConnectionPoolFactory;
import by.bsuir.hotelReservation.connection.pool.exception.ConnectionPoolException;
import by.bsuir.hotelReservation.web.controller.command.Command;



public class Controller extends HttpServlet {

	private static final long serialVersionUID = -1852427791495732042L;

	private static final CommandProvider PROVIDER = new CommandProvider();
	private static final String REQUEST_PARAMETR = "command";
	
	public Controller() {
		super();
	}

	@Override
	public void init(ServletConfig config) throws ServletException {

		super.init(config);
		ConnectionPoolFactory objectCPFactory = ConnectionPoolFactory.getInstance();
		ConnectionPool cp=null;
		try {
			cp = objectCPFactory.getConnectionPool();
		} catch (ConnectionPoolException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

		try {
			cp.initPoolData();
		} catch (ConnectionPoolException e) {

			//throw new CreatingConnectionPoolException(e);
		}
	}

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		String commandName = request.getParameter(REQUEST_PARAMETR);
		Command command = PROVIDER.getCommand(commandName);
		command.execute(request, response);

	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		String commandName = request.getParameter(REQUEST_PARAMETR);
		Command command = PROVIDER.getCommand(commandName);
		command.execute(request, response);

	}

	public void destroy() {
		super.destroy();
		ConnectionPoolFactory objectCPFactory = ConnectionPoolFactory.getInstance();
		ConnectionPool cp=null;
		try {
			cp = objectCPFactory.getConnectionPool();
		} catch (ConnectionPoolException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		cp.dispose();
	}

}
