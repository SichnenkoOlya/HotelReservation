package by.bsuir.hotelReservation.connection.pool;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.Vector;

class MyConnectionPool {
	private Vector<Connection> availableConns = new Vector<Connection>();
	private Vector<Connection> usedConns = new Vector<Connection>();
	private String url;
	private static final String DRIVER_NAME=  "com.mysql.jdbc.Driver";
	private static final String URL=  "jdbc:mysql://localhost:3306/users";
	private static final String USER= "root";
	private static final String PASSWORD=  "1234";
	private int poolSize;
	
	public MyConnectionPool() {
		try {
			Class.forName(DRIVER_NAME);
		} catch (Exception e) {
			e.printStackTrace();
		}
		this.url = URL;
		for (int i = 0; i < poolSize; i++) {
			availableConns.addElement(getConnection());
		}
	}

	private Connection getConnection() {
		Connection conn = null;
		try {
			conn = DriverManager.getConnection(url);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return conn;
	}

	public synchronized Connection retrieve() throws SQLException {
		Connection newConn = null;
		if (availableConns.size() == 0) {
			newConn = getConnection();
		} else {
			newConn = (Connection) availableConns.lastElement();
			availableConns.removeElement(newConn);
		}
		usedConns.addElement(newConn);
		return newConn;
	}

	public synchronized void putback(Connection c) throws NullPointerException {
	if (c != null) {
		if (usedConns.removeElement(c)) {
			availableConns.addElement(c);
		} else {
			throw new NullPointerException("Connection not in the usedConns array");
		}
	 } 
    }

	public int getAvailableConnsCnt() {
		return availableConns.size();
	}
}